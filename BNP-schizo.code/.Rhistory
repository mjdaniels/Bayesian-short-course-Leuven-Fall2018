source(
"schizo-code.R")
library(bindata)
#library(NiNBayes)
schizo_data <- readRDS("schizo.rds")
Y <- scale(schizo_data[[1]])
R <- ifelse(is.na(Y), 0, 1)
sens.param <- matrix(runif(100 * ncol(Y)), nrow = 100)
foo <- FitDPMN(Y,R, K = 5, n.adapt = 100, n.save = 100, thin = 1, n.chains = 1)
bar <- GCompDPMN(foo$mcmc, Y, K = 5, sens.param = sens.param)
source("schizo-code.R")
#only for the first run
install.packages("devtools")
install.packages(c("MCMCpack", "tidyverse", "gridExtra", "Rcpp", "RcppArmadillo", "mitools", "bindata"))
library(devtools)
install_github("theodds/NiNBayes")
schizo_data <- readRDS("schizo.rds")
Y <- scale(schizo_data[[1]])
R <- ifelse(is.na(Y), 0, 1)
sens.param <- matrix(runif(100 * ncol(Y)), nrow = 100)
sens.param
q()
q()
install.packages("devtools")
source("schizo-code.R")
source("schizo-code.R")
source("schizo-code.R")
clang
library(clang)
library(clang)
source("schizo-code.R")
q()
source("schizo-code.R")
q()
q()
source("schizo-code.R")
library(NiNBayes)
schizo_data <- readRDS("schizo.rds")
Y <- scale(schizo_data[[1]])
R <- ifelse(is.na(Y), 0, 1)
# adjust to match data example slides
sens.param <- matrix(runif(100 * ncol(Y)), nrow = 100)
foo <- FitDPMN(Y,R, K = 5, n.adapt = 100, n.save = 100, thin = 1, n.chains = 1)
bar <- GCompDPMN(foo$mcmc, Y, K = 5, sens.param = sens.param)
help(load.module)
help(loadmodule)
install_github("theodds/NiNBayes")
# code for schizo data
library(bindata)
library(NiNBayes)
install.packages("rjags")
install_github("theodds/NiNBayes")
library(rjags)
#only for the first run
install.packages("devtools")
install.packages(c("MCMCpack", "tidyverse", "gridExtra", "Rcpp", "RcppArmadillo", "mitools", "bindata","rjags"))
library(devtools)
install_github("theodds/NiNBayes")
install.packages("rjags")
library(rjags)
library("rjags")
library(rjags)
install_github("theodds/NiNBayes")
library(bindata)
library(NiNBayes)
schizo_data <- readRDS("schizo.rds")
Y <- scale(schizo_data[[1]])
R <- ifelse(is.na(Y), 0, 1)
# adjust to match data example slides
sens.param <- matrix(runif(100 * ncol(Y)), nrow = 100)
foo <- FitDPMN(Y,R, K = 5, n.adapt = 100, n.save = 100, thin = 1, n.chains = 1)
bar <- GCompDPMN(foo$mcmc, Y, K = 5, sens.param = sens.param)
library(norm)
install.packages("norm")
library(norm)
library(bindata)
library(NiNBayes)
schizo_data <- readRDS("schizo.rds")
Y <- scale(schizo_data[[1]])
R <- ifelse(is.na(Y), 0, 1)
# adjust to match data example slides
sens.param <- matrix(runif(100 * ncol(Y)), nrow = 100)
foo <- FitDPMN(Y,R, K = 5, n.adapt = 100, n.save = 100, thin = 1, n.chains = 1)
bar <- GCompDPMN(foo$mcmc, Y, K = 5, sens.param = sens.param)
install.packages("runjags")
library(runjags)
schizo_data <- readRDS("schizo.rds")
Y <- scale(schizo_data[[1]])
R <- ifelse(is.na(Y), 0, 1)
# adjust to match data example slides
sens.param <- matrix(runif(100 * ncol(Y)), nrow = 100)
foo <- FitDPMN(Y,R, K = 5, n.adapt = 100, n.save = 100, thin = 1, n.chains = 1)
bar <- GCompDPMN(foo$mcmc, Y, K = 5, sens.param = sens.param)
bar
ls
help(GCOMPDPMN)
names(foo)
names(bar)
mean(bar$means)
foo$summaries
quantiles(bar$means)
quantile(bar$means)
names(schizo.data)
names(schizo_data)
schizo_data
GCOMPDPMN
GCompDPMN
Y
schizo_data[1,]
schizo_data[1]
bar
schizo_data[[1]]
schizo_data[[2]]
schizo_data[[3]]
q()
